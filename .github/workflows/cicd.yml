#GitHub Action for CICD pipeline
name: java-maven-sonar-argocd-gh_actions-k8s CICD

on:
  push:
    branches:
      [ main ]
    paths-ignore:
      - '.github/workflows/*'
      - '.gitignore'
      - 'README.md'
      - 'terraform/*'
      - 'LICENSE'
  workflow_dispatch:
    
      
jobs:

  Checkout-Build-Push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Run the Maven package
        working-directory: ./spring-boot-app
        run: |
         mvn package --file pom.xml
      
      - name: Sonarqube Scan
        working-directory: ./spring-boot-app
        env:
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
         mvn sonar:sonar -Dsonar.token="$SONAR_TOKEN" -Dsonar.host.url="$SONAR_HOST_URL"
          
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-web
          path: ./spring-boot-app/target

      - name: Set Docker Image Tag
        id: docker-image-tag
        run: |
          IMAGE_TAG=$(date +'%y-%m-%d-%s')
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to docker Hub
        env:
         IMAGE_TAG: ${{ steps.docker-image-tag.outputs.IMAGE_TAG }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: yashtank1999/java-argocd-k8s:${{ env.IMAGE_TAG }}
          
      - name: Push Image Tag number to repo
        working-directory: ./spring-boot-manifests
        env:
          IMAGE_TAG: ${{ steps.docker-image-tag.outputs.IMAGE_TAG }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          pwd
          ls
          git config user.email "tankyash180@gmail.com"
          git config user.name "Yash Tank"
          IMAGE_TAG="$IMAGE_TAG"
          sed -i "s/java-argocd-k8s:.*/java-argocd-k8s:$IMAGE_TAG/g" deployment.yml
          git add deployment.yml
          git commit -m "Update deployment image to version $IMAGE_TAG"
          git push https://$GIT_TOKEN@github.com/$GITHUB_REPOSITORY HEAD:yashtank/dev



        
